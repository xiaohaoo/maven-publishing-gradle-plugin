plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
}

group 'com.xiaohaoo'
version '1.0'
repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
}

test {
    useJUnitPlatform()
}
gradlePlugin {
    plugins {
        simplePlugin {
            id = 'com.xiaohaoo.maven-publishing'
            implementationClass = 'com.xiaohaoo.gradle.plugin.MavenPublishingPlugin'
        }
    }
}


java {
    withSourcesJar()
    withJavadocJar()
}


javadoc {
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

def gitUrl = 'https://github.com/xiaohaoo/maven-publishing-gradle-plugin'

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version
            from components.java
            pom {
                name = project.name
                description = 'gradle发布到maven仓库插件'
                url = gitUrl

                licenses {
                    license {
                        name = 'GNU AFFERO GENERAL PUBLIC LICENSE, Version 3'
                        url = 'http://www.gnu.org/licenses/agpl-3.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'xiaohao'
                        name = 'xiaohao'
                        email = 'sdwenhappy@163.com'
                    }
                }
                scm {
                    connection = String.format("%s.git", gitUrl.replaceAll("https[s]?", "scm:git:git"))
                    developerConnection = String.format("%s.git", gitUrl.replaceAll("https[s]?", "scm:git:ssh"))
                    url = gitUrl
                }
            }
        }
    }
    repositories {
        maven {
            name = "mavenCenter"
            url = version.endsWith("SNAPSHOT") ? 'https://s01.oss.sonatype.org/content/repositories/snapshots/' : 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}


signing {
    sign publishing.publications.mavenJava
}